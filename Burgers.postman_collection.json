{
  "info": {
    "_postman_id": "7887f406-8078-468a-8df1-39becf0bf79d",
    "name": "Burgers",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "17880741"
  },
  "item": [
    {
      "name": "Dev",
      "item": [
        {
          "name": "404 Dev",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "pm.test(\"Response status code is 404\", function () {\r",
                  "    pm.expect(pm.response.code).to.equal(404);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Response body contains the error message 'Endpoint not found'\", function () {\r",
                  "    const responseData = pm.response.text();\r",
                  "    \r",
                  "    pm.expect(responseData).to.include(\"Endpoint not found\");\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Error title is present in the response body\", function () {\r",
                  "    pm.expect(pm.response.json()).to.include(\"Error\");\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Response time is less than 200ms\", function () {\r",
                  "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:1337/asdasdas",
              "protocol": "http",
              "host": ["localhost"],
              "port": "1337",
              "path": ["asdasdas"]
            }
          },
          "response": []
        },
        {
          "name": "get Burgers Dev",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:1337/burgers",
              "protocol": "http",
              "host": ["localhost"],
              "port": "1337",
              "path": ["burgers"]
            }
          },
          "response": []
        },
        {
          "name": "getBurgerById Dev",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:1337/burgers/6567d60e9fbd027bb1d9d750",
              "protocol": "http",
              "host": ["localhost"],
              "port": "1337",
              "path": ["burgers", "6567d60e9fbd027bb1d9d750"]
            }
          },
          "response": []
        },
        {
          "name": "delete Burgers Dev",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"_id\": \"65732d56ed518fdc7ce26eb0\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:1337/burgers/",
              "protocol": "http",
              "host": ["localhost"],
              "port": "1337",
              "path": ["burgers", ""]
            }
          },
          "response": []
        },
        {
          "name": "Add Burgers Dev",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"Vegasssn Burger\",\r\n  \"price\": 11,\r\n  \"isOrdered\": false,\r\n  \"ingredients\": [\"Brioche buns\", \"Vegan Ham\", \"Cheese\"],\r\n  \"imageUrl\":\r\n    \"https://i.ibb.co/nMhsNVJ/rice-burger-with-salmon-cutlet-avocado-and-soy-sa-2021-12-09-07-32-56-utc.jpg\",\r\n  \"badges\": [\"Vegan\"]\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:1337/burgers",
              "protocol": "http",
              "host": ["localhost"],
              "port": "1337",
              "path": ["burgers"]
            }
          },
          "response": []
        },
        {
          "name": "Modify Burger Dev",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"_id\": \"6567d60e9fbd027bb1d9d750\",\r\n  \"name\": \"Vegasssn Burger\",\r\n  \"price\": 11,\r\n  \"isOrdered\": false,\r\n  \"ingredients\": \"Brioche buns\",\r\n  \"isVegan\": true,\r\n  \"hasGluten\": true,\r\n  \"imageUrl\":\r\n    \"https://i.ibb.co/nMhsNVJ/rice-burger-with-salmon-cutlet-avocado-and-soy-sa-2021-12-09-07-32-56-utc.jpg\"\r\n\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:1337/burgers",
              "protocol": "http",
              "host": ["localhost"],
              "port": "1337",
              "path": ["burgers"]
            }
          },
          "response": []
        },
        {
          "name": "ping Dev",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:1337/",
              "protocol": "http",
              "host": ["localhost"],
              "port": "1337",
              "path": [""]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Prod",
      "item": [
        {
          "name": "404 Prod",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "pm.test(\"Response status code is 404\", function () {\r",
                  "    pm.expect(pm.response.code).to.equal(404);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Response body contains the error message 'Endpoint not found'\", function () {\r",
                  "    const responseData = pm.response.text();\r",
                  "    \r",
                  "    pm.expect(responseData).to.include(\"Endpoint not found\");\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Error title is present in the response body\", function () {\r",
                  "    pm.expect(pm.response.json()).to.include(\"Error\");\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Response time is less than 200ms\", function () {\r",
                  "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "https://alex-andru-202309-bcn-back.onrender.com//asdasdas",
              "protocol": "https",
              "host": ["alex-andru-202309-bcn-back", "onrender", "com"],
              "path": ["", "asdasdas"]
            }
          },
          "response": []
        },
        {
          "name": "ping Prod",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "https://alex-andru-202309-bcn-back.onrender.com/",
              "protocol": "https",
              "host": ["alex-andru-202309-bcn-back", "onrender", "com"],
              "path": [""]
            }
          },
          "response": []
        },
        {
          "name": "get Burgers Prod",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "https://alex-andru-202309-bcn-back.onrender.com/burgers/",
              "protocol": "https",
              "host": ["alex-andru-202309-bcn-back", "onrender", "com"],
              "path": ["burgers", ""]
            }
          },
          "response": []
        }
      ]
    }
  ]
}
